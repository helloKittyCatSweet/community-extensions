<?xml version="1.0" ?>
<!DOCTYPE plugin [
<!ELEMENT plugin (doc?, attributes?, requires?, runtime?,
                  (extension-point|extension)*)>
<!ATTLIST plugin id         CDATA #REQUIRED>
<!ATTLIST plugin version    CDATA #REQUIRED>
<!ATTLIST plugin vendor     CDATA #IMPLIED>
<!ATTLIST plugin class      CDATA #IMPLIED>
<!ATTLIST plugin docs-path  CDATA #IMPLIED>

<!ELEMENT plugin-fragment (doc?, attributes?, requires?, runtime?,
                           (extension-point|extension)*)>
<!ATTLIST plugin-fragment id              CDATA #REQUIRED>
<!ATTLIST plugin-fragment version         CDATA #REQUIRED>
<!ATTLIST plugin-fragment vendor          CDATA #IMPLIED>
<!ATTLIST plugin-fragment plugin-id       CDATA #REQUIRED>
<!ATTLIST plugin-fragment plugin-version  CDATA #IMPLIED>
<!ATTLIST plugin-fragment match           (equal | equivalent | compatible
                                          | greater-or-equal) "compatible">
<!ATTLIST plugin-fragment docs-path       CDATA #IMPLIED>

<!ELEMENT attributes (attribute+)>

<!ELEMENT attribute (doc?, attribute*)>
<!ATTLIST attribute id     CDATA #REQUIRED>
<!ATTLIST attribute value  CDATA #IMPLIED>

<!ELEMENT doc (doc-ref*, doc-text?)>
<!ATTLIST doc caption  CDATA #IMPLIED>

<!ELEMENT doc-ref EMPTY>
<!ATTLIST doc-ref path     CDATA #REQUIRED>
<!ATTLIST doc-ref caption  CDATA #REQUIRED>

<!ELEMENT doc-text (#PCDATA)>

<!ELEMENT requires (import+)>

<!ELEMENT import (doc?)>
<!ATTLIST import id              CDATA #IMPLIED>
<!ATTLIST import plugin-id       CDATA #REQUIRED>
<!ATTLIST import plugin-version  CDATA #IMPLIED>
<!ATTLIST import match           (equal | equivalent | compatible
                                 | greater-or-equal) "compatible">
<!ATTLIST import exported        (true | false) "false">
<!ATTLIST import optional        (true | false) "false">
<!ATTLIST import reverse-lookup  (true | false) "false">

<!ELEMENT runtime (library+)>

<!ELEMENT library (doc?, export*)>
<!ATTLIST library id       CDATA #REQUIRED>
<!ATTLIST library path     CDATA #REQUIRED>
<!ATTLIST library type     (code | resources) #REQUIRED>
<!ATTLIST library version  CDATA #IMPLIED>

<!ELEMENT export EMPTY>
<!ATTLIST export prefix  CDATA #REQUIRED>

<!ELEMENT extension-point (doc?, parameter-def*)>
<!ATTLIST extension-point id                CDATA #REQUIRED>
<!ATTLIST extension-point parent-plugin-id  CDATA #IMPLIED>
<!ATTLIST extension-point parent-point-id   CDATA #IMPLIED>
<!ATTLIST extension-point extension-multiplicity  (any | one | one-per-plugin
                                                  | none) "any">

<!ELEMENT parameter-def (doc?, parameter-def*)>
<!ATTLIST parameter-def id             CDATA #REQUIRED>
<!ATTLIST parameter-def multiplicity   (one | any | none-or-one | one-or-more)
                                       "one">
<!ATTLIST parameter-def type           (string | boolean | number | date | time
                                       | date-time | null | any | plugin-id
									   | extension-point-id | extension-id
									   | fixed | resource) "string">
<!ATTLIST parameter-def custom-data    CDATA #IMPLIED>
<!ATTLIST parameter-def default-value  CDATA #IMPLIED>


<!ELEMENT extension (doc?, parameter*)>
<!ATTLIST extension plugin-id  CDATA #REQUIRED>
<!ATTLIST extension point-id   CDATA #REQUIRED>
<!ATTLIST extension id         CDATA #REQUIRED>

<!ELEMENT parameter (doc?, value?, parameter*)>
<!ATTLIST parameter id     CDATA #REQUIRED>
<!ATTLIST parameter value  CDATA #IMPLIED>

<!ELEMENT value (#PCDATA)>
]>

<plugin id="logicaldoc-ce-conversion" version="8.9.1" class="com.logicaldoc.conversion.ConversionPlugin">
	<requires>
		<import plugin-id="logicaldoc-core" />
	</requires>
	
  <extension plugin-id="logicaldoc-core" point-id="Feature" id="f45">
	    <parameter id="name" value="Feature_45" />
  </extension>
  <extension plugin-id="logicaldoc-core" point-id="Feature" id="f8">
	    <parameter id="name" value="Feature_8" />
  </extension>

	<extension plugin-id="logicaldoc-core" point-id="FormatConverter" id="htmConv">
		<parameter id="in" value="htm,html,htmlx"/>
		<parameter id="out" value="pdf,png"/>
		<parameter id="class" value="com.logicaldoc.conversion.HTMLConverter"/>
	</extension>
	<extension plugin-id="logicaldoc-core" point-id="FormatConverter" id="textConv">
		<parameter id="in" value="wpd,txt,odt,doc,docm,docx,dotx,dotm,docxm,sxw,rtf,xml,sh,bat,java,properties,php,c,cpp,log,json"/>
		<parameter id="out" value="pdf,txt,odt,doc,docx,sxw"/>
		<parameter id="class" value="com.logicaldoc.conversion.LibreOfficeConverter"/>
	</extension>
	<extension plugin-id="logicaldoc-core" point-id="FormatConverter" id="spreadsheetConv">
		<parameter id="in" value="ods,sxc,xls,xlsm,xlsb,xlsx,csv"/>
		<parameter id="out" value="pdf,csv,ods,sxc,xls,xlsx"/>
		<parameter id="class" value="com.logicaldoc.conversion.LibreOfficeConverter"/>
	</extension>
	<extension plugin-id="logicaldoc-core" point-id="FormatConverter" id="presentationConv">
		<parameter id="in" value="pps,odp,sxi,ppt,pptm,pptx,pptxm"/>
		<parameter id="out" value="pdf,odp,sxi,ppt,pptx"/>
		<parameter id="class" value="com.logicaldoc.conversion.LibreOfficeConverter"/>
	</extension>
	<extension plugin-id="logicaldoc-core" point-id="FormatConverter" id="emailConv">
		<parameter id="in" value="msg,eml"/>
		<parameter id="out" value="pdf"/>
		<parameter id="class" value="com.logicaldoc.conversion.LibreOfficeConverter"/>
	</extension>
	
</plugin>